// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: FileServer.proto

package xcxcpanfileservice

import (
	"context"

	"XcStorage/XcXcPanFileServer"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DelChunkRequest       = XcXcPanFileServer.DelChunkRequest
	DelChunkResponse      = XcXcPanFileServer.DelChunkResponse
	DownloadChunkRequest  = XcXcPanFileServer.DownloadChunkRequest
	DownloadChunkResponse = XcXcPanFileServer.DownloadChunkResponse
	UploadChunkRequest    = XcXcPanFileServer.UploadChunkRequest
	UploadChunkResponse   = XcXcPanFileServer.UploadChunkResponse

	XcXcPanFileService interface {
		UploadChunk(ctx context.Context, in *UploadChunkRequest, opts ...grpc.CallOption) (*UploadChunkResponse, error)
		DelChunk(ctx context.Context, in *DelChunkRequest, opts ...grpc.CallOption) (*DelChunkResponse, error)
		DownloadChunk(ctx context.Context, in *DownloadChunkRequest, opts ...grpc.CallOption) (*DownloadChunkResponse, error)
	}

	defaultXcXcPanFileService struct {
		cli zrpc.Client
	}
)

func NewXcXcPanFileService(cli zrpc.Client) XcXcPanFileService {
	return &defaultXcXcPanFileService{
		cli: cli,
	}
}

func (m *defaultXcXcPanFileService) UploadChunk(ctx context.Context, in *UploadChunkRequest, opts ...grpc.CallOption) (*UploadChunkResponse, error) {
	client := XcXcPanFileServer.NewXcXcPanFileServiceClient(m.cli.Conn())
	return client.UploadChunk(ctx, in, opts...)
}

func (m *defaultXcXcPanFileService) DelChunk(ctx context.Context, in *DelChunkRequest, opts ...grpc.CallOption) (*DelChunkResponse, error) {
	client := XcXcPanFileServer.NewXcXcPanFileServiceClient(m.cli.Conn())
	return client.DelChunk(ctx, in, opts...)
}

func (m *defaultXcXcPanFileService) DownloadChunk(ctx context.Context, in *DownloadChunkRequest, opts ...grpc.CallOption) (*DownloadChunkResponse, error) {
	client := XcXcPanFileServer.NewXcXcPanFileServiceClient(m.cli.Conn())
	return client.DownloadChunk(ctx, in, opts...)
}
